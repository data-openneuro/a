name: STEP T2a SRC QC

on:
  workflow_dispatch:
    inputs:
      dataset_id:
        description: 'OpenNeuro Accession Number'
        default: ds001378
        required: true
  workflow_call:
    inputs:
      dataset_id:
        description: 'OpenNeuro Accession Number'
        default: ds001378
        required: true
        type: string
jobs:
  src_quality_check:
    name: SRC Quality Check
    runs-on: ubuntu-20.04
    steps:     
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Check Files
        run: |
          if curl --head --silent --fail https://github.com/${GITHUB_REPOSITORY}/releases/download/${{ inputs.dataset_id }}/qc.tsv; then
            echo "file_exists=true" >> $GITHUB_ENV
            wget -q https://github.com/${GITHUB_REPOSITORY}/releases/download/${{ inputs.dataset_id }}/qc.tsv
            cat qc.tsv >> $GITHUB_STEP_SUMMARY
          else
            echo "file_exists=false" >> $GITHUB_ENV
          fi
      - name: Download and Extract DSI Studio
        if: env.file_exists == 'false'
        run: |
          curl -sL "https://github.com/frankyeh/DSI-Studio/releases/download/2024.06.12/dsi_studio_ubuntu2004.zip" | jar x && chmod 777 ./dsi-studio/dsi_studio          
      - name: Get Subject List
        if: env.file_exists == 'false'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |        
          files=($(curl https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/${{ inputs.dataset_id }} | jq '.assets[] | select(.name | endswith(".sz")) | .name' | tr -d '"'))
          for file in "${files[@]}"; do
            echo "Processing $file"
            url="https://github.com/${GITHUB_REPOSITORY}/releases/download/${{ inputs.dataset_id }}/$file"
            if curl --head --silent --fail $url; then
              wget -q $url
              ./dsi-studio/dsi_studio --action=qc --source=.
              if [ -f "all_qc.txt" ]; then
                sed -n '2,$p' qc.tsv >> all_qc.tsv
              else
                head -n 2 qc.tsv > all_qc.tsv
              fi
              rm *.sz
              rm qc.tsv
            else
              echo "cannot find $url" > all_qc.tsv
            fi
          done
          cat all_qc.tsv >> $GITHUB_STEP_SUMMARY
          mv all_qc.tsv qc.tsv
          gh release upload "${{ inputs.dataset_id }}" qc.tsv
        
